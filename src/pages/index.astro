---
import Icon from "../components/Icon.astro"

const icons = await Astro.glob("/public/icons/*.ts")
---

<body class=''>
	<header class='bg-gradient-to-br bg-space/5'>
		<div class='mx-auto max-w-7xl px-4 py-10 sm:px-6 lg:px-8'>
			<h1
				class='mt-6 text-[1.75rem] font-extrabold leading-9 tracking-tight text-space/90 md:text-4xl'
			>
				Nimiq Icons
			</h1>
		</div>
	</header>
	<main class='mx-auto max-w-7xl px-4 sm:px-6 lg:px-8'>
		<ul
			class='grid grid-cols-[repeat(auto-fill,minmax(8rem,1fr))] gap-x-6 gap-y-8 pt-10 pb-16 sm:pt-11 md:pt-12'
		>
			{
				icons.map(({ default: icon }) => (
					<li>
						<Icon name={icon.name} svg={icon.svg} />
					</li>
				))
			}
		</ul>

		<script>
			const icons = document.querySelectorAll<HTMLButtonElement>("[data-icon]")
			icons.forEach((icon) => {
				const svg = icon.querySelector("[data-svg]")?.innerHTML
				const copy = icon.querySelector("[data-copy]") as HTMLButtonElement
				const download = icon.querySelector("[data-download]") as HTMLButtonElement

				if (!svg || !copy || !download) return

				copy.addEventListener("click", () => {
					console.log(svg)
					navigator.clipboard.writeText(svg)
					copy.blur()

					// show the data-copied element: set display to initial, opacity to 0, then animate opacity to 1
					const copied = icon.querySelector("[data-copied]") as HTMLElement
					if (!copied) return
					copied.style.display = "initial"
					copied.style.opacity = "1"

					// force hover and focus style to be removed temporarily
					// with css
					copy.classList.add("hidden")
					download.classList.add("hidden")
					setTimeout(() => {
						copy.classList.remove("hidden")
						download.classList.remove("hidden")
					}, 2000)

					// hide the data-copied element after 2 seconds
					setTimeout(() => {
						copied.style.opacity = "0"
						setTimeout(() => (copied.style.display = "none"), 200)
					}, 2000)
				})

				download.addEventListener("click", () => {
					const a = document.createElement("a")
					a.href = `data:image/svg+xml,${encodeURIComponent(svg)}`
					a.download = `${icon.dataset.icon}-icon.svg`
					a.click()
					download.blur()
				})
			})
		</script>
	</main>
</body>
